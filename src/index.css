@tailwind base;
@tailwind components;
@tailwind utilities;

/* 1. Define CSS custom properties and dark mode overrides */
@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    /* Light green primary color */
    --primary: 142 76% 36%;
    --primary-foreground: 355.7 100% 97.3%;

    /* Bluish accent for icons */
    --accent: 217 91% 60%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 142 76% 36%;

    --radius: 0.5rem;

    --content-scale: 1;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }
}

/* 2. Apply base styles */
@layer base {
  /* Optionally remove this if you don't want a border on every element */
 
  body {
    @apply bg-background text-foreground;
  }
}

/* 3. Define additional utility classes for your custom properties */
@layer utilities {
  /* Create a utility for background using the --background variable */
  .bg-background {
    background-color: hsl(var(--background));
  }

  /* Create a utility for text color using the --foreground variable */
  .text-foreground {
    color: hsl(var(--foreground));
  }

  /* You can create similar utilities for card, popover, etc. if needed */
  .bg-card {
    background-color: hsl(var(--card));
  }

  .text-card-foreground {
    color: hsl(var(--card-foreground));
  }

  /* Define the border-border class so Tailwind knows it */
  .border-border {
    @apply border border-[hsl(var(--border))];
  }
}

/* 4. Additional accessibility and utility classes */
@layer base {
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }

  .focus-visible-ring {
    @apply focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2;
  }

  /* Scale content based on user preference */
  .scale-content {
    transform: scale(var(--content-scale));
    transform-origin: top left;
  }

  /* High contrast mode for better visibility */
  .high-contrast {
    --primary: 0 0% 0%;
    --primary-foreground: 0 0% 100%;
    --accent: 0 0% 0%;
    --accent-foreground: 0 0% 100%;
    --background: 0 0% 100%;
    --foreground: 0 0% 0%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 0%;
    --border: 0 0% 0%;
  }
}
